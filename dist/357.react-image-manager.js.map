{"version":3,"file":"357.react-image-manager.js","mappings":"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","sources":["webpack://react-image-manager/./src/components/CropImage.jsx","webpack://react-image-manager/./src/components/ImageFieldDropDown/ImageFieldDropDown.jsx","webpack://react-image-manager/./src/components/ImageFieldDropDown/imageFieldDropDown.style.js","webpack://react-image-manager/./src/components/ImageFieldInput.jsx","webpack://react-image-manager/./src/components/ImageUploader.jsx","webpack://react-image-manager/./src/config/consts.js","webpack://react-image-manager/./src/style/crop.js","webpack://react-image-manager/./src/style/imageField.js","webpack://react-image-manager/./src/style/imageUploader.js"],"sourcesContent":["import { useContext } from \"react\";\r\nimport ReactCrop from \"react-image-crop\";\r\nimport { useCustomizedStyle } from \"../style/crop.js\";\r\nimport ImageManagerContext from \"../contexts/index\";\r\n\r\nfunction CropImage({ src, crop, setCrop, adjustedHeightImage }) {\r\n  const { cropProperties } = useContext(ImageManagerContext);\r\n  const { newCropAspectRatio } = cropProperties;\r\n\r\n  // crop format example\r\n  // height: 173.25559997558594\r\n  // unit: \"px\"\r\n  // width: 346.5111999511719\r\n  // x: 139.39031982421875\r\n  // y: 37.63502502441406\r\n  // console.log(\"src\", src);\r\n  // console.log(\"crop\", crop);\r\n  const classes = useCustomizedStyle()();\r\n  // console.log(cropProperties);\r\n  return (\r\n    <ReactCrop\r\n      crop={crop}\r\n      onChange={(c) =>\r\n        setCrop(() => {\r\n          console.log(\"new C\", {\r\n            ...c,\r\n            height: parseInt(c.height),\r\n            width: parseInt(c.width),\r\n            x: parseInt(c.x),\r\n            y: parseInt(c.y),\r\n          });\r\n          return {\r\n            ...c,\r\n            height: parseInt(c.height),\r\n            width: parseInt(c.width),\r\n            x: parseInt(c.x),\r\n            y: parseInt(c.y),\r\n          };\r\n        })\r\n      }\r\n      aspect={newCropAspectRatio}\r\n      minWidth={cropProperties.cropMinWidth}\r\n      minHeight={cropProperties.cropMinHeight}\r\n      maxWidth={cropProperties.cropMaxWidth}\r\n      maxHeight={cropProperties.cropMaxHeight}\r\n      keepSelection={cropProperties.cropKeepSelection}\r\n      disabled={cropProperties.cropDisabled}\r\n      locked={cropProperties.cropLocked}\r\n      className={cropProperties.cropClassName}\r\n      style={cropProperties.cropstyle}\r\n      onComplete={cropProperties.cropOnComplete}\r\n      percentCrop={cropProperties.cropPercentCrop}\r\n      onDragStart={cropProperties.cropOnDragStart}\r\n      onDragEnd={cropProperties.cropOnDragEnd}\r\n      renderSelectionAddon={cropProperties.cropRenderSelectionAddon}\r\n      ruleOfThirds={cropProperties.cropRuleOfThirds}\r\n      circularCrop={cropProperties.cropCircularCrop}\r\n    >\r\n      <img src={src} className={classes.image} height={adjustedHeightImage} />\r\n    </ReactCrop>\r\n  );\r\n}\r\n\r\nexport default CropImage;\r\n","import { useCustomizedStyle } from \"./imageFieldDropDown.style\";\r\nimport Select from \"@mui/material/Select\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\n\r\n// REPRENDRE LA YO\r\n// De quoi générer un dropdown\r\n// Un array d'objet avec libellé / value\r\n// une valeur par défaut\r\n// le nom de la key\r\n// {type : \"dropdown\", name : \"language\", keys : [{name : \"\", value : \"1\"},{name : \"\", value : \"2\"}],defaultValue : \"2\", isRequired : true}\r\n\r\nconst ImageFieldDropDown = ({\r\n  name,\r\n  keys,\r\n  handleChange,\r\n  isRequired,\r\n  defaultValue,\r\n  stateFields,\r\n}) => {\r\n  const classes = useCustomizedStyle()();\r\n\r\nconsole.log('Dropdown keys', keys)\r\n\r\n  return (\r\n    <div className={classes.imageFieldContainer}>\r\n      <FormControl fullWidth>\r\n        <InputLabel id=\"demo-simple-select-label\">\r\n          {name}\r\n          {isRequired && \" *\"}\r\n        </InputLabel>\r\n        <Select\r\n          labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={stateFields?.[name].value}\r\n          label={name}\r\n          onChange={(e) => handleChange(e, name)}\r\n          defaultValue={defaultValue}\r\n        >\r\n          {keys.map((oneKey, index) => (\r\n            <MenuItem value={oneKey.value} key={index} >\r\n              {oneKey.name}\r\n            </MenuItem>\r\n          ))}\r\n        </Select>\r\n      </FormControl>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageFieldDropDown;\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\n//TODO : passer tout le customizable en paramètre de la fonction\r\n//TODO chaque parametre doit avoir une valeur par default\r\nexport const useCustomizedStyle = () =>\r\n  createUseStyles({\r\n    imageFieldContainer: {},\r\n    imageFieldLabel: { fontSize: \"16px\", textTransform: \"capitalize\" },\r\n    imageFieldInput: { fontSize: \"16px\", width: \"100%\", padding: \"8px\" },\r\n  });\r\n","import { useCustomizedStyle } from \"../style/imageField.js\";\r\n\r\nconst ImageField = ({ name, stateFields, handleChange, isRequired }) => {\r\n  const classes = useCustomizedStyle()();\r\n  return (\r\n    <div className={classes.imageFieldContainer}>\r\n      <div>\r\n        <label htmlFor={name} className={classes.imageFieldLabel}>\r\n          {name}\r\n          {isRequired && \" *\"}\r\n        </label>\r\n      </div>\r\n      <input\r\n        id={name}\r\n        value={stateFields?.[name].value}\r\n        onChange={(e) => handleChange(e, name)}\r\n        className={classes.imageFieldInput}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageField;\r\n","import { useContext, useState } from \"react\";\r\nimport { useCustomizedStyle } from \"../style/imageUploader.js\";\r\nimport CropImage from \"./CropImage.jsx\";\r\nimport ImageManagerContext from \"../contexts/index\";\r\nimport axios from \"axios\";\r\nimport ImageField from \"./ImageFieldInput\";\r\nimport ImageFieldDropDown from \"./ImageFieldDropDown/ImageFieldDropDown\";\r\nimport Autocomplete from \"@mui/material/Autocomplete\";\r\nimport TextField from \"@mui/material/TextField\";\r\nimport { WIDTH_IMAGE } from \"../config/consts\";\r\n\r\nconst ImageUploader = () => {\r\n  const classes = useCustomizedStyle()();\r\n  const [documentUploaded, setDocumentUploaded] = useState(null);\r\n  const [documentUploadedRaw, setDocumentUploadedRaw] = useState(null);\r\n  const [crop, setCrop] = useState();\r\n  const [adjustedHeightImage, setAdjustedHeightImage] = useState(0);\r\n  const [ratioDimensionsImage, setRatioDimensionsImage] = useState(null);\r\n  const [selectedTags, setSelectedTags] = useState([]);\r\n  const [statImage, setStateImage] = useState({\r\n    width: null,\r\n    height: null,\r\n  });\r\n\r\n  const { uploadProperties, tagList, withTags, cropProperties } =\r\n    useContext(ImageManagerContext);\r\n\r\n  const { onFailureuploadImageTooSmall, minWidthImageUpload } =\r\n    uploadProperties;\r\n\r\n  // Settings up fields for the image based on received props\r\n  const defaultStateFields = uploadProperties.imageFields.reduce(\r\n    (total, current) => {\r\n      total[current.name] = {\r\n        value: current?.defaultValue || \"\",\r\n        isRequired: current?.isRequired || false,\r\n        type: current?.type || \"input\",\r\n        keys: current?.keys || [],\r\n      };\r\n      return total;\r\n    },\r\n    {}\r\n  );\r\n\r\n  const [fields, setFields] = useState(defaultStateFields);\r\n\r\n  const handleChange = (event) => {\r\n    const { target } = event;\r\n    const { files } = target;\r\n    const file = files[0];\r\n\r\n    var url = URL.createObjectURL(file);\r\n    var img = new Image();\r\n    img.onload = function () {\r\n      if (\r\n        uploadProperties.minWidthImageUpload &&\r\n        img.width < uploadProperties.minWidthImageUpload\r\n      ) {\r\n        onFailureuploadImageTooSmall(uploadProperties.minWidthImageUpload);\r\n        return;\r\n      } else {\r\n        setDocumentUploadedRaw(file);\r\n        setDocumentUploaded(URL.createObjectURL(file));\r\n\r\n        const { width, height } = img;\r\n        setStateImage({\r\n          width,\r\n          height,\r\n        });\r\n\r\n        const adjustedHeight = Math.round((WIDTH_IMAGE * height) / width);\r\n        setAdjustedHeightImage(adjustedHeight);\r\n        setRatioDimensionsImage(width / WIDTH_IMAGE);\r\n\r\n        URL.revokeObjectURL(img.src);\r\n      }\r\n    };\r\n\r\n    img.src = url;\r\n  };\r\n\r\n  const handleChangeFields = (e, key) => {\r\n    setFields({ ...fields, [key]: { ...fields[key], value: e.target.value } });\r\n  };\r\n  \r\n\r\n  const isUploadButtonDisabled = () => {\r\n    let isDisabled = false;\r\n    for (const field in fields) {\r\n      if (!fields[field].value && fields[field].isRequired) {\r\n        isDisabled = true;\r\n      }\r\n    }\r\n\r\n    if (!documentUploaded) {\r\n      isDisabled = true;\r\n    }\r\n\r\n    console.log(\"isDisabled ?\", isDisabled);\r\n\r\n    return isDisabled;\r\n  };\r\n\r\n  const handleSelectTags = (e, values) => {\r\n    let tagsChecked = [];\r\n\r\n    if (Array.isArray(values)) {\r\n      for (const value of values) {\r\n        // Checking if there are new tags\r\n        if (typeof value === \"string\") {\r\n          const tagAsObject = {\r\n            name: value,\r\n            language: uploadProperties?.customPropsToPass?.language,\r\n            isNewTag: true,\r\n          };\r\n          tagsChecked = [...tagsChecked, tagAsObject];\r\n        } else {\r\n          tagsChecked = [...tagsChecked, value];\r\n        }\r\n      }\r\n    }\r\n\r\n    setSelectedTags(tagsChecked);\r\n  };\r\n\r\n  const handleUpload = async (event) => {\r\n    // crop format example\r\n    // height: 173.25559997558594\r\n    // unit: \"px\"\r\n    // width: 346.5111999511719\r\n    // x: 139.39031982421875\r\n    // y: 37.63502502441406\r\n    \r\n\r\n    if (!uploadProperties.urlUpload) {\r\n      throw \"urlUpload prop is not defined. This URL is needed to know where to send the data uploaded.\";\r\n    }\r\n\r\n    const formData = new FormData();\r\n\r\n    // Adding all the keys defined by the dev\r\n    for (const key in fields) {\r\n      formData.append(key, fields[key].value);\r\n    }\r\n\r\n    // Adding custom paylord properties passed from props\r\n    for (const prop in uploadProperties.additionalPayloadUpload) {\r\n      formData.append(prop, uploadProperties.additionalPayloadUpload[prop]);\r\n    }\r\n\r\n    formData.append(\"x\", crop?.x * ratioDimensionsImage);\r\n    formData.append(\"y\", crop?.y * ratioDimensionsImage);\r\n    formData.append(\"width\", crop?.width * ratioDimensionsImage);\r\n    formData.append(\"height\", crop?.height * ratioDimensionsImage);\r\n    formData.append(\"image\", documentUploadedRaw, \"wtf.png\");\r\n    formData.append(\"tags\", JSON.stringify(selectedTags));\r\n\r\n    //TODO map all props and check there are no JS objects ?\r\n\r\n    \r\n\r\n    console.log(\"headers ajoutés\", uploadProperties.axiosHeadersUpload);\r\n    \r\n      try {\r\n        const resp = await axios.post(uploadProperties.urlUpload, formData, {\r\n          ...uploadProperties.axiosHeadersUpload,\r\n          \"Content-Type\": \"multipart/form-data\",\r\n        });\r\n        console.log(\"RESP OK ?\", resp);\r\n\r\n        // Success callback function if defined\r\n        if (uploadProperties.onSuccessUpload) {\r\n          uploadProperties.onSuccessUpload(resp);\r\n        }\r\n      } catch (e) {\r\n        // Failure callback function if defined\r\n        if (uploadProperties.onFailureupload) {\r\n          uploadProperties.onFailureupload(e);\r\n        } else {\r\n          console.log(\"Error while uploading picture. Error :\", e);\r\n        }\r\n      }\r\n  };\r\n\r\n  console.log('image fields', uploadProperties.imageFields)\r\n  console.log(\"fields as state\", defaultStateFields);\r\n\r\n  return (\r\n    <div style={{ overflowY: documentUploaded ? \"scroll\" : \"auto\" }}>\r\n      {documentUploaded && (\r\n        <div className={classes.cropContainer}>\r\n          <CropImage\r\n            src={documentUploaded}\r\n            crop={crop}\r\n            setCrop={setCrop}\r\n            adjustedHeightImage={adjustedHeightImage}\r\n          />\r\n          <div className={classes.dataImage}>\r\n            {statImage.width && <p>Width: {statImage.width} px</p>}\r\n            {statImage.height && <p>Height: {statImage.height} px</p>}\r\n          </div>\r\n          <div className={classes.dataImage}>\r\n            {crop?.width && (\r\n              <p>\r\n                Croppped Width: {parseInt(crop?.width * ratioDimensionsImage)}{\" \"}\r\n                px\r\n              </p>\r\n            )}\r\n            {crop?.height && (\r\n              <p>\r\n                Cropped Height: {parseInt(crop?.height * ratioDimensionsImage)}{\" \"}\r\n                px\r\n              </p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n      <div\r\n        className={documentUploaded ? classes.uploaded : classes.nonUploaded}\r\n      >\r\n        {documentUploaded && (\r\n          <div>\r\n            <div className={classes.fieldContainer}>\r\n              {uploadProperties.imageFields.map((objectField, index) => {\r\n                if (objectField.type === \"input\" || objectField?.type === undefined) {\r\n                  return (\r\n                    <ImageField\r\n                      handleChange={handleChangeFields}\r\n                      name={objectField.name}\r\n                      isRequired={objectField.isRequired}\r\n                      key={index}\r\n                      stateFields={fields}\r\n                    />\r\n                  );\r\n                } else if (objectField.type === \"dropdown\") {\r\n                  return (\r\n                    <ImageFieldDropDown\r\n                      handleChange={handleChangeFields}\r\n                      name={objectField.name}\r\n                      isRequired={objectField.isRequired}\r\n                      key={index}\r\n                      stateFields={fields}\r\n                      keys={objectField.keys}\r\n                      defaultValue={objectField.value}\r\n                    />\r\n                  );\r\n                }\r\n              }\r\n              )}\r\n            </div>\r\n            {withTags && (\r\n              <div className={classes.tagContainer}>\r\n                <Autocomplete\r\n                  multiple\r\n                  id=\"tags-standard\"\r\n                  options={tagList}\r\n                  getOptionLabel={(option) => option.name}\r\n                  value={selectedTags}\r\n                  onChange={handleSelectTags}\r\n                  freeSolo\r\n                  renderInput={(params) => (\r\n                    <TextField\r\n                      {...params}\r\n                      variant=\"standard\"\r\n                      label=\"Select Tags\"\r\n                      placeholder=\"Tags\"\r\n                    />\r\n                  )}\r\n                />\r\n              </div>\r\n            )}\r\n          </div>\r\n        )}\r\n        <div className={classes.allInputs}>\r\n          <div className={classes.inputContainer}>\r\n            <label htmlFor=\"uploadButton\" className=\"customFileInput\">\r\n              CHOOSE A FILE\r\n            </label>\r\n            <input\r\n              type=\"file\"\r\n              name=\"myfile\"\r\n              className=\"inputFile\"\r\n              onChange={handleChange}\r\n              accept=\"image/png, image/jpeg\"\r\n              id=\"uploadButton\"\r\n            />\r\n          </div>\r\n          {documentUploaded && (\r\n            <div className={classes.inputContainer}>\r\n              <button\r\n                className=\"customFileInput\"\r\n                onClick={handleUpload}\r\n                disabled={isUploadButtonDisabled()}\r\n              >\r\n                UPLOAD\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUploader;\r\n\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n//\r\n// next\r\n// Regarder dans la doc de sharp si left and co sont forcément des integer avec sharp, car on a des nombres avec 8 chiffres après la virgule\r\n// essayer de sauvegarder une image !!\r\n// checker que tous les endpoins ne sont pas désormais des multi form car on n'a pas encapsulé\r\n//\r\n// prop isCropMandatory\r\n//\r\n// Endpoint back\r\n// Gestion image avec les data de crop\r\n// Sauvegarder l'image\r\n// Renvoyer une 200 ou 500\r\n\r\n// On passe sur la gallery (multi/mono select, pagination)\r\n//\r\n// On peut choisir les modes à activer sur l'image manager\r\n//\r\n","export const WIDTH_IMAGE = 680;\r\n\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\n//TODO : passer tout le customizable en paramètre de la fonction\r\n//TODO chaque parametre doit avoir une valeur par default\r\nexport const useCustomizedStyle = () =>\r\n  createUseStyles({\r\n    image: {\r\n      width: \"680px !important\",\r\n    },\r\n  });\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\n//TODO : passer tout le customizable en paramètre de la fonction\r\n//TODO chaque parametre doit avoir une valeur par default\r\nexport const useCustomizedStyle = () =>\r\n  createUseStyles({\r\n    imageFieldContainer: {},\r\n    imageFieldLabel: { fontSize: \"16px\", textTransform: \"capitalize\" },\r\n    imageFieldInput: { fontSize: \"16px\", width: \"100%\", padding: \"8px\" },\r\n  });\r\n","import { createUseStyles } from \"react-jss\";\r\n\r\n//TODO : passer tout le customizable en paramètre de la fonction\r\n//TODO chaque parametre doit avoir une valeur par default\r\nexport const useCustomizedStyle = () =>\r\n  createUseStyles({\r\n    uploaded: {},\r\n    nonUploaded: {\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n      height: \"100%\",\r\n    },\r\n    allInputs: {\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\",\r\n      \"& input::-webkit-file-upload-button, & button\": {\r\n        margin: \"20px 0\",\r\n      },\r\n    },\r\n    inputContainer: {\r\n      position: \"relative\",\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"center\",\r\n    },\r\n    cropContainer: {\r\n      marginTop: \"40px\",\r\n    },\r\n    tagContainer: {\r\n      \"& > div\": {\r\n        width: \"80%\",\r\n        margin: \"auto\",\r\n      },\r\n    },\r\n    dataImage: {\r\n      display: \"flex\",\r\n      marginBottom: \"1rem\",\r\n      \"& p\": {\r\n        fontSize: \"1.2rem\",\r\n        marginRight: \"10px\",\r\n        fontWeight: \"bold\",\r\n      },\r\n    },\r\n  });\r\n"],"names":["CropImage","src","crop","setCrop","adjustedHeightImage","cropProperties","useContext","ImageManagerContext","newCropAspectRatio","classes","useCustomizedStyle","onChange","c","console","log","height","parseInt","width","x","y","aspect","minWidth","cropMinWidth","minHeight","cropMinHeight","maxWidth","cropMaxWidth","maxHeight","cropMaxHeight","keepSelection","cropKeepSelection","disabled","cropDisabled","locked","cropLocked","className","cropClassName","style","cropstyle","onComplete","cropOnComplete","percentCrop","cropPercentCrop","onDragStart","cropOnDragStart","onDragEnd","cropOnDragEnd","renderSelectionAddon","cropRenderSelectionAddon","ruleOfThirds","cropRuleOfThirds","circularCrop","cropCircularCrop","image","ImageFieldDropDown","name","keys","handleChange","isRequired","defaultValue","stateFields","imageFieldContainer","fullWidth","id","labelId","value","label","e","map","oneKey","index","createUseStyles","imageFieldLabel","fontSize","textTransform","imageFieldInput","padding","ImageField","htmlFor","i","ImageUploader","useState","documentUploaded","setDocumentUploaded","documentUploadedRaw","setDocumentUploadedRaw","setAdjustedHeightImage","ratioDimensionsImage","setRatioDimensionsImage","selectedTags","setSelectedTags","statImage","setStateImage","uploadProperties","tagList","withTags","onFailureuploadImageTooSmall","defaultStateFields","minWidthImageUpload","imageFields","reduce","total","current","type","fields","setFields","handleChangeFields","key","target","handleUpload","event","urlUpload","formData","FormData","append","prop","additionalPayloadUpload","JSON","stringify","axiosHeadersUpload","axios","resp","onSuccessUpload","onFailureupload","overflowY","cropContainer","dataImage","uploaded","nonUploaded","fieldContainer","objectField","undefined","tagContainer","multiple","options","getOptionLabel","option","values","tagsChecked","Array","isArray","tagAsObject","language","customPropsToPass","isNewTag","freeSolo","renderInput","params","variant","placeholder","allInputs","inputContainer","file","files","url","URL","createObjectURL","img","Image","onload","adjustedHeight","Math","round","WIDTH_IMAGE","revokeObjectURL","accept","onClick","isDisabled","field","isUploadButtonDisabled","display","justifyContent","alignItems","margin","position","marginTop","marginBottom","marginRight","fontWeight"],"sourceRoot":""}